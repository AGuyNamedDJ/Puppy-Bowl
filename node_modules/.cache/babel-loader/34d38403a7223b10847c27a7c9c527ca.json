{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n// Writing Starter Code\nconst puppyBowlRosterArr = [\"Contestant\", \"Kenny\"];\n// update when found\n\n// Declaring State\nconst Contestants = () => {\n  _s();\n  // This is an empty starter plate;\n  const [contestant, setContestant] = useState([]);\n\n  // Fetch Data\n  useEffect(() => {\n    // Here we are grabbing data from the Puppl Bowl API\n    async function fetchPuppyBowlData() {\n      // Try Block\n      // Will TRY to run the code;\n      try {\n        // Fetch method that will get some data from the URL;\n        const response = await fetch(\"https://fsa-puppy-bowl.herokuapp.com\");\n\n        // Convert promise response into JSON;\n        const data = await response.json();\n        console.log(\"Here is the translated data from the promise response: \", data);\n        console.log(\"Here is the REAL data from the above translated data\", data.results);\n\n        // Sava data from response promise & update state;\n        setContestant(data.results);\n\n        // Catch Block\n        // Will run if the TRY section fails to run;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchPuppyBowlData;\n  }, []);\n  // Ask what this mean because I don't understand it\n};\n_s(Contestants, \"S9fyKhx6cF5bwf3k8LOQs2l/hgE=\");\n_c = Contestants;\nvar _c;\n$RefreshReg$(_c, \"Contestants\");","map":{"version":3,"names":["React","useEffect","createRoot","puppyBowlRosterArr","Contestants","contestant","setContestant","useState","fetchPuppyBowlData","response","fetch","data","json","console","log","results","error"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-04/Puppy-Bowl/src/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n// Writing Starter Code\nconst puppyBowlRosterArr = [\"Contestant\", \"Kenny\"]\n    // update when found\n\n// Declaring State\nconst Contestants = () => {\n    // This is an empty starter plate;\n    const [contestant, setContestant] = useState([])\n\n    // Fetch Data\n    useEffect(() => {\n        // Here we are grabbing data from the Puppl Bowl API\n        async function fetchPuppyBowlData () {\n\n            // Try Block\n                // Will TRY to run the code;\n            try {\n                // Fetch method that will get some data from the URL;\n                const response = await fetch (\"https://fsa-puppy-bowl.herokuapp.com\");\n\n                // Convert promise response into JSON;\n                const data = await response.json();\n                console.log(\"Here is the translated data from the promise response: \", data)\n                console.log(\"Here is the REAL data from the above translated data\", data.results)\n\n                // Sava data from response promise & update state;\n                setContestant(data.results)\n\n\n            // Catch Block\n                // Will run if the TRY section fails to run;\n            } catch (error){\n                console.log(error)\n\n            }\n\n        }\n        fetchPuppyBowlData;\n\n    }, [])\n    // Ask what this mean because I don't understand it\n\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,MAAMC,kBAAkB,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC;AAC9C;;AAEJ;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAN,SAAS,CAAC,MAAM;IACZ;IACA,eAAeO,kBAAkB,GAAI;MAEjC;MACI;MACJ,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAsC,CAAC;;QAErE;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEH,IAAI,CAAC;QAC5EE,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAAEH,IAAI,CAACI,OAAO,CAAC;;QAEjF;QACAT,aAAa,CAACK,IAAI,CAACI,OAAO,CAAC;;QAG/B;QACI;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAC;QACXH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAEtB;IAEJ;IACAR,kBAAkB;EAEtB,CAAC,EAAE,EAAE,CAAC;EACN;AAEJ,CAAC;AAAA,GArCKJ,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}