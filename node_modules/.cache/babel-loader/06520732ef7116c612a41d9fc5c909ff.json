{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-04/Puppy-Bowl/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import CreateBrowserRouter Method from Dependency\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\n// Imported our Pages\nimport AllPups from \"./components/AllPups\";\nimport AboutUs from \"./components/AboutUs\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport Homepage from \"./components/Homepage\";\nimport Settings from \"./components/Settings\";\n\n// Now we need to use the brower in the index.js entry file to make a router instance\n// One argument needed\n// [] of objects; every object is an individual route of our react application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 18\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 24\n  }, this),\n  children: [\n  // mimicks the parent\n  {\n    path: \"/about\",\n    element: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: \"/allpups\",\n    element: /*#__PURE__*/_jsxDEV(AllPups, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: \"/settings\",\n    element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this)\n  }]\n}]);\n\n// Now you have to connect the router to the DOM\nReactDOM.render( /*#__PURE__*/_jsxDEV(RouterProvider, {\n  router: router\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 17\n}, this), document.getElementById(\"app\"));\n// The router provider will be the top most parent component\n// then Homepage\n\n// Writing Starter Code\n\n// Declaring State\nconst PuppyBowl = () => {\n  _s();\n  // This is an empty starter plate;\n  const [contestants, setContestants] = useState([]);\n\n  // Fetch Data\n\n  useEffect(() => {\n    // Here we are grabbing data from the Puppl Bowl API\n    async function fetchPuppyBowlData() {\n      // Try Block\n      // Will TRY to run the code as normal;\n      try {\n        // Fetch method to get data from the URL;\n        const response = await fetch(\"https://fsa-puppy-bowl.herokuapp.com/api/2209-ftb-mt-web-ft/players\");\n\n        // Convert promise response into JSON;\n        const puppyData = await response.json();\n        console.log(\"Here is the translated data from the promise response: \", puppyData);\n        console.log(\"Here is the REAL data: \", data.results);\n\n        // Sava data from response promise & update state;\n        setContestants(puppyData.data.results);\n        // Correct this as of class question\n\n        // Catch Block\n        // Will run if the TRY section fails to run;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchPuppyBowlData();\n  }, []);\n\n  // Rendering the Game State\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Puppy Bowl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contestants && contestants.length ? puppyPlayers.map((pup, idx) => {\n        // Terenary ^\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name of Contestant: \", pup.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pup Breed: \", pup.breed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pup.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No pups to display, someone is biting the server cords...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this)\n      // This is for the Truthy half of terenary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(PuppyBowl, \"2LtDvJ6FDUqcsKKgwMd79KXMC7k=\");\n_c = PuppyBowl;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Contestants, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 17\n}, this), document.getElementById(\"app\"));\nvar _c;\n$RefreshReg$(_c, \"PuppyBowl\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","createBrowserRouter","RouterProvider","AllPups","AboutUs","ErrorPage","Homepage","Settings","router","path","element","errorElement","children","render","document","getElementById","PuppyBowl","contestants","setContestants","fetchPuppyBowlData","response","fetch","puppyData","json","console","log","data","results","error","length","puppyPlayers","map","pup","idx","name","breed","imageUrl"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-04/Puppy-Bowl/src/index.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import CreateBrowserRouter Method from Dependency\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\n// Imported our Pages\nimport AllPups from \"./components/AllPups\";\nimport AboutUs from \"./components/AboutUs\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport Homepage from \"./components/Homepage\";\nimport Settings from \"./components/Settings\";\n\n// Now we need to use the brower in the index.js entry file to make a router instance\n    // One argument needed\n        // [] of objects; every object is an individual route of our react application\nconst router = createBrowserRouter([\n    {\n        path: \"/\",\n        element: < Homepage />,\n        errorElement:  < ErrorPage />,\n        children: [\n            // mimicks the parent\n            {\n                path: \"/about\",\n                element: <AboutUs />\n            },\n            {\n                path: \"/allpups\",\n                element: <AllPups />\n            },\n            {\n                path: \"/settings\",\n                element: <Settings />\n            }\n        ]\n    }]\n);\n\n// Now you have to connect the router to the DOM\nReactDOM.render(<RouterProvider router={router} />, document.getElementById(\"app\"))\n    // The router provider will be the top most parent component\n        // then Homepage\n\n// Writing Starter Code\n\n// Declaring State\nconst PuppyBowl = () => {\n    // This is an empty starter plate;\n    const [contestants, setContestants] = useState([]);\n\n    // Fetch Data\n\n    useEffect(() => {\n        // Here we are grabbing data from the Puppl Bowl API\n        async function fetchPuppyBowlData () {\n\n            // Try Block\n                // Will TRY to run the code as normal;\n            try {\n                // Fetch method to get data from the URL;\n                const response = await fetch (\"https://fsa-puppy-bowl.herokuapp.com/api/2209-ftb-mt-web-ft/players\");\n\n                // Convert promise response into JSON;\n                const puppyData = await response.json();\n                console.log(\"Here is the translated data from the promise response: \", puppyData);\n                console.log(\"Here is the REAL data: \", data.results);\n\n                // Sava data from response promise & update state;\n                setContestants(puppyData.data.results)\n                    // Correct this as of class question\n\n\n            // Catch Block\n                // Will run if the TRY section fails to run;\n            } catch (error){\n                console.log(error)\n            }\n        }\n        fetchPuppyBowlData()\n    }, [])\n\n    // Rendering the Game State\n    return (\n        <div>\n            <h1>Puppy Bowl</h1>\n\n            <div>\n                {\n                    contestants && contestants.length ? puppyPlayers.map((pup, idx) => {\n                        // Terenary ^\n                    return <div key={idx}>\n                        <p>Name of Contestant: {pup.name}</p>\n                        <p>Pup Breed: {pup.breed}</p>\n                        <img src={pup.imageUrl}></img>    \n                    </div>               \n                }) : <div>No pups to display, someone is biting the server cords...</div>\n                    // This is for the Truthy half of terenary\n            } \n            </div>   \n        </div>\n    )\n};\n\n\nReactDOM.render(<Contestants />, document.getElementById(\"app\"))"],"mappings":"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"},"metadata":{},"sourceType":"module"}